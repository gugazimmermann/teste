name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for deployment (e.g., v1.2)'
        required: true
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max_old_space_size=8192"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Set up Git user
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Calculate Default Tag
      id: calculate_tag
      run: |
        git fetch --tags
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        if [ -z "$LATEST_TAG" ]; then
          NEW_TAG="v1.0"
        else
          NEW_TAG=$(echo $LATEST_TAG | awk -F. -v OFS=. '{$NF++; print}')
        fi
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        echo "default-tag=${NEW_TAG}" >> $GITHUB_ENV

    - name: Set Default Tag as Input
      if: ${{ github.event.inputs.tag == '' }}
      run: |
        echo "::set-output name=tag::${{ env.NEW_TAG }}"

    - name: Use Provided or Default Tag
      run: |
        TAG=${{ github.event.inputs.tag }}
        if [ -z "$TAG" ]; then
          TAG=${{ steps.calculate_tag.outputs.tag }}
        fi
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Checkout Main
      run: |
        git checkout main
        git pull origin main

    - name: Create and Push New Tag
      run: |
        TAG=${{ env.TAG }}
        git tag -a $TAG -m "Production $TAG"
        git push origin $TAG
        echo "Pushed Tag: $TAG"

    - name: Create Production Branch
      run: |
        TAG=${{ env.TAG }}
        git checkout -b production $TAG
        git push origin production --force
